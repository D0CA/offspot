/**
 * The MIT License (MIT)
 *
 * Copyright (c) 2012-2018 DragonBones team and other contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
import { Slot } from "../armature";
/**
 * - The PixiJS slot.
 * @version DragonBones 3.0
 * @language en_US
 */
/**
 * - PixiJS 插槽。
 * @version DragonBones 3.0
 * @language zh_CN
 */
export declare class PixiSlot extends Slot {
    static toString(): string;
    private _textureScale;
    private _renderDisplay;
    protected _onClear(): void;
    protected _initDisplay(_value: any, _isRetain: boolean): void;
    protected _disposeDisplay(value: any, isRelease: boolean): void;
    protected _onUpdateDisplay(): void;
    protected _addDisplay(): void;
    protected _replaceDisplay(value: any): void;
    protected _removeDisplay(): void;
    protected _updateZOrder(): void;
    protected _updateBlendMode(): void;
    protected _updateColor(): void;
    protected _updateFrame(): void;
    protected _updateMesh(): void;
    protected _updateTransform(): void;
    protected _identityTransform(): void;
}
